# Search Engines Configuration for Local Deep Research
# This file defines all available search engines and their properties

[wikipedia]
module_path = "local_deep_research.web_search_engines.engines.search_engine_wikipedia"
class_name = "WikipediaSearchEngine"
requires_api_key = false
reliability = 0.95
strengths = [
    "factual information", "general knowledge", "definitions", 
    "historical facts", "biographies", "overview information"
]
weaknesses = ["recent events", "specialized academic topics", "product comparisons"]

[wikipedia.default_params]
max_results = 20
include_content = true

[arxiv]
module_path = "local_deep_research.web_search_engines.engines.search_engine_arxiv"
class_name = "ArXivSearchEngine"
requires_api_key = false
reliability = 0.9
strengths = [
    "scientific papers", "academic research", "physics", "computer science", 
    "mathematics", "statistics", "machine learning", "preprints"
]
weaknesses = ["non-academic topics", "consumer products", "news", "general information"]

[arxiv.default_params]
max_results = 20
sort_by = "relevance"
sort_order = "descending"

[pubmed]
module_path = "local_deep_research.web_search_engines.engines.search_engine_pubmed"
class_name = "PubMedSearchEngine"
requires_api_key = false
api_key_env = "NCBI_API_KEY"
reliability = 0.98
strengths = [
    "biomedical literature", "medical research", "clinical studies", 
    "life sciences", "health information", "scientific papers"
]
weaknesses = [
    "non-medical topics", "very recent papers may be missing", 
    "limited to published research"
]
requires_llm = true

[pubmed.default_params]
max_results = 20
get_abstracts = true
get_full_text = false
full_text_limit = 3
days_limit = 0
optimize_queries = true

[github]
module_path = "local_deep_research.web_search_engines.engines.search_engine_github"
class_name = "GitHubSearchEngine"
requires_api_key = false
reliability = 0.99
strengths = [
    "code repositories", "software documentation", "open source projects", 
    "programming issues", "developer information", "technical documentation"
]
weaknesses = ["non-technical content", "content outside GitHub", "rate limits without API key"]
supports_full_search = true

[github.default_params]
max_results = 15
search_type = "repositories"
include_readme = true
include_issues = false

[serpapi]
module_path = "local_deep_research.web_search_engines.engines.search_engine_serpapi"
class_name = "SerpAPISearchEngine"
requires_api_key = true
api_key_env = "SERP_API_KEY"
reliability = 0.6
strengths = [
    "comprehensive web search", "product information", "reviews", 
    "recent content", "news", "broad coverage"
]
weaknesses = ["requires API key with usage limits", "not specialized for academic content"]
supports_full_search = true
full_search_module = "local_deep_research.web_search_engines.engines.full_serp_search_results_old"
full_search_class = "FullSerpAPISearchResults"

[serpapi.default_params]
region = "us"
time_period = "y"
safe_search = true
search_language = "English"

[google_pse]
module_path = "local_deep_research.web_search_engines.engines.search_engine_google_pse"
class_name = "GooglePSESearchEngine"
requires_api_key = true
api_key_env = "GOOGLE_PSE_API_KEY"
reliability = 0.9
strengths = [
    "custom search scope", "high-quality results", "domain-specific search", 
    "configurable search experience", "control over search index"
]
weaknesses = [
    "requires API key with usage limits", 
    "limited to 10,000 queries/day on free tier",
    "requires search engine configuration in Google Control Panel"
]
supports_full_search = true
full_search_module = "local_deep_research.web_search_engines.engines.full_search"
full_search_class = "FullSearchResults"

[google_pse.default_params]
region = "us"
safe_search = true
search_language = "English"

[brave]
module_path = "local_deep_research.web_search_engines.engines.search_engine_brave"
class_name = "BraveSearchEngine"
requires_api_key = true
api_key_env = "BRAVE_API_KEY"
reliability = 0.7
strengths = [
    "privacy-focused web search", "product information", "reviews", 
    "recent content", "news", "broad coverage"
]
weaknesses = ["requires API key with usage limits", "smaller index than Google"]
supports_full_search = true
full_search_module = "local_deep_research.web_search_engines.engines.full_search"
full_search_class = "FullSearchResults"

[brave.default_params]
region = "US"
time_period = "y"
safe_search = true
search_language = "English"

[wayback]
module_path = "local_deep_research.web_search_engines.engines.search_engine_wayback"
class_name = "WaybackSearchEngine"
requires_api_key = false
reliability = 0.5
strengths = [
    "historical web content", "archived websites", "content verification", 
    "deleted or changed web pages", "website evolution tracking"
]
weaknesses = [
    "limited to previously archived content", "may miss recent changes", 
    "archiving quality varies"
]
supports_full_search = true

[wayback.default_params]
max_results = 15
max_snapshots_per_url = 3
closest_only = false
language = "English"

[auto]
module_path = "local_deep_research.web_search_engines.engines.meta_search_engine"
class_name = "MetaSearchEngine"
requires_api_key = false
reliability = 0.85
strengths = [
    "intelligent engine selection", "adaptable to query type", 
    "fallback capabilities"
]
weaknesses = ["slightly slower due to LLM analysis"]
requires_llm = true

[auto.default_params]
use_api_key_services = true
max_engines_to_try = 3

[local_all]
module_path = "local_deep_research.web_search_engines.engines.search_engine_local_all"
class_name = "LocalAllSearchEngine"
requires_api_key = false
reliability = 0.85
strengths = ["searches all local collections", "personal documents", "offline access"]
weaknesses = ["may return too many results", "requires indexing"]
requires_llm = true

#[semantic_scholar]
#module_path = "local_deep_research.web_search_engines.engines.search_engine_semantic_scholar"
#class_name = "SemanticScholarSearchEngine"
#requires_api_key = false
#api_key_env = "S2_API_KEY"
#reliability = 0.87
#strengths = [
#    "comprehensive scientific literature", 
#    "extensive citation network", 
#    "AI-generated summaries (TLDRs)", 
#    "academic paper metadata", 
#    "cross-disciplinary coverage",
#    "200M+ papers across all fields",
#    "usable without API key"
#]
#weaknesses = [
#    "rate limited (1000 requests/day) without API key",
#    "limited to academic content"
#]
#supports_full_search = true
#requires_llm = false

#[semantic_scholar.default_params]
#max_results = 20
#get_abstracts = true
#get_tldr = true
#get_references = false
#get_citations = false
#get_embeddings = false
#citation_limit = 10
#reference_limit = 10
#optimize_queries = true
#max_retries = 5
#retry_backoff_factor = 1.0

# Default search engine to use if none specified
DEFAULT_SEARCH_ENGINE = "wikipedia"





# Additional search engines can be added below
# Uncomment and modify these templates as needed

# [duckduckgo]
# module_path = "local_deep_research.web_search_engines.engines.search_engine_ddg"
# class_name = "DuckDuckGoSearchEngine"
# requires_api_key = false
# reliability = 0.4
# strengths = [
#     "web search", "product information", "reviews", "recent information", 
#     "news", "general queries", "broad coverage"
# ]
# weaknesses = ["inconsistent due to rate limits", "not specialized for academic content"]
# supports_full_search = true
# full_search_module = "local_deep_research.web_search_engines.engines.full_search"
# full_search_class = "FullSearchResults"
# 
# [duckduckgo.default_params]
# region = "us"
# safe_search = true

# [guardian]
# module_path = "local_deep_research.web_search_engines.engines.search_engine_guardian"
# class_name = "GuardianSearchEngine"
# requires_api_key = true
# api_key_env = "GUARDIAN_API_KEY"
# reliability = 0.5
# strengths = [
#     "news articles", "current events", "opinion pieces", "journalism", 
#     "UK and global news", "political analysis"
# ]
# weaknesses = ["primarily focused on news", "limited historical content pre-1999"]
# 
# [guardian.default_params]
# order_by = "relevance"